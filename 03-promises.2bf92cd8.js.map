{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA0BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACPN,EACFI,EAAQ,uBAAwCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDM,EAAK,sBAAuCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAErDA,E,IAlCQS,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAOF,IANA,IAEmBC,EAAfF,EAAEG,cADJC,SAAYhB,EAAKc,EAALd,MAAOiB,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAGvBC,GAAcnB,EAAMoB,MAEfC,EAAI,EAAGA,IAAMH,EAAOE,MAAOC,GAAK,EACrCvB,EAAcuB,EAAGF,GACpBG,MAAK,SAAAF,GACJxB,EAAA2B,OAAOC,QAAQJ,E,IAEhBK,OAAM,SAAAL,GACLxB,EAAA2B,OAAOG,QAAQN,E,IAEbD,IAAgBF,EAAKG,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\nconst form = document.querySelector('.form')\nlet timerId = null;\nform.addEventListener(\"submit\", onFormSubmit)\n\nfunction onFormSubmit(e) {\n  e.preventDefault()\n  const {\n    elements: { delay, step, amount }\n  } = e.currentTarget;\n\n  let delayValue = +delay.value\n  \n  for (let i = 1; i <= +amount.value; i += 1) {\n      createPromise(i, delayValue)\n  .then(value => {\n    Notify.success(value);\n  })\n  .catch(value => {\n    Notify.failure(value);\n  });\n      delayValue += (+step.value)\n  }\n  \n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      reject(`❌ Rejected promise ${position} in ${delay}ms`)\n    }\n  }, delay)\n  })\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","step","amount","delayValue","value","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.2bf92cd8.js.map"}