{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA0BA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACPN,EACFI,EAAQ,uBAAqBN,QAAiBC,OAE5CM,EAAK,sBAAoBP,QAAiBC,MAAU,GAEvDA,EAAM,G,CAlCEQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBACF,MACEC,UAAUb,MAAEA,EAAKc,KAAEA,EAAIC,OAAEA,IACvBJ,EAAEK,cAEN,IAAIC,GAAcjB,EAAMkB,MAExB,IAAK,IAAIC,EAAI,EAAGA,IAAMJ,EAAOG,MAAOC,GAAK,EACrCrB,EAAcqB,EAAGF,GACpBG,MAAKF,IACJtB,EAAAyB,OAAOC,QAAQJ,EAAM,IAEtBK,OAAML,IACLtB,EAAAyB,OAAOG,QAAQN,EAAM,IAEnBD,IAAgBH,EAAKI,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\nconst form = document.querySelector('.form')\nlet timerId = null;\nform.addEventListener(\"submit\", onFormSubmit)\n\nfunction onFormSubmit(e) {\n  e.preventDefault()\n  const {\n    elements: { delay, step, amount }\n  } = e.currentTarget;\n\n  let delayValue = +delay.value\n  \n  for (let i = 1; i <= +amount.value; i += 1) {\n      createPromise(i, delayValue)\n  .then(value => {\n    Notify.success(value);\n  })\n  .catch(value => {\n    Notify.failure(value);\n  });\n      delayValue += (+step.value)\n  }\n  \n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      reject(`❌ Rejected promise ${position} in ${delay}ms`)\n    }\n  }, delay)\n  })\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","elements","step","amount","currentTarget","delayValue","value","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.cfe5d13f.js.map"}